name: CI/CD LAMP

on:
  push:
    branches: [ "master" ]
  pull_request:
  workflow_dispatch:

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    env:
      WP_DB_USER: user
      WP_DB_NAME: wordpress
      WP_DB_HOST: db:3306
      DOCKER_IMAGE: blackshadow20/icrc:latest

    steps:
      - name: Vérification du code
        uses: actions/checkout@v4

      - name: Générer un mot de passe aléatoire pour la BD
        run: echo "RANDOM_DB_PASSWORD=$(openssl rand -base64 16)" >> $GITHUB_ENV

      - name: Configuration Docker
        run: |
          docker --version
          docker compose version || true

      - name: Configure docker-compose.yml
        run: |
          cat > docker-compose.yml <<EOF
          version: '3.8'
          services:
            db:
              image: mysql:8.0
              environment:
                MYSQL_DATABASE: ${{ env.WP_DB_NAME }}
                MYSQL_USER: ${{ env.WP_DB_USER }}
                MYSQL_PASSWORD: ${{ env.RANDOM_DB_PASSWORD }}
                MYSQL_ROOT_PASSWORD: ${{ env.RANDOM_DB_PASSWORD }}
              ports:
                - "3306:3306"
              healthcheck:
                test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
                interval: 5s
                retries: 5

            wordpress:
              image: wordpress:latest
              depends_on:
                db:
                  condition: service_healthy
              ports:
                - "8080:80"
              environment:
                WORDPRESS_DB_HOST: ${{ env.WP_DB_HOST }}
                WORDPRESS_DB_USER: ${{ env.WP_DB_USER }}
                WORDPRESS_DB_PASSWORD: ${{ env.RANDOM_DB_PASSWORD }}
                WORDPRESS_DB_NAME: ${{ env.WP_DB_NAME }}

            adminer:
              image: adminer
              ports:
                - "8081:8080"
          EOF

      - name: Lance Docker Compose
        run: docker compose up -d

      - name: Wait for MySQL container
        run: |
          echo "Waiting for MySQL container..."
          DB_CONTAINER=$(docker compose ps -q db)
          for i in {1..30}; do
            if docker exec "$DB_CONTAINER" mysql -u"$WP_DB_USER" -p"$RANDOM_DB_PASSWORD" -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Wait for WordPress container
        run: |
          echo "Waiting for WordPress container..."
          for i in {1..30}; do
            if curl -sf http://localhost:8080 >/dev/null; then
              echo "WordPress is ready!"
              break
            fi
            echo "Waiting for WordPress..."
            sleep 2
          done

      - name: Test WordPress
        run: curl -f http://localhost:8080 || exit 1

      - name: Afficher le mot de passe généré
        run: echo "Le mot de passe généré pour la base de données est : ${{ env.RANDOM_DB_PASSWORD }}"

      - name: Construire l’image Docker
        run: docker build -t $DOCKER_IMAGE .

      - name: Connexion au Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Image Docker
        run: docker push $DOCKER_IMAGE

      - name: Nettoyage
        if: always()
        run: docker compose down
